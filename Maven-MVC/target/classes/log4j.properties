#指定根Logger，及日志输出级别，大于等于该级别的日志将被输出
# ALL < DEBUG < INFO < WARN < ERROR < FATAL <OFF
# 设为OFF可以关闭日志 
log4j.rootLogger=DEBUG, stdout, log, errorlog,dayFile

###输出到控制台###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender  
log4j.appender.stdout.Target = System.out  
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout 
log4j.appender.stdout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

###输出到日志文件 ###
log4j.appender.log = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.log.File = E:/log/infoLog.log
log4j.appender.log.Append = true  
## 输出INFO级别以上的日志
log4j.appender.log.Threshold = INFO
log4j.appender.log.DatePattern='.'yyyy-MM-dd  
log4j.appender.log.layout = org.apache.log4j.PatternLayout  
log4j.appender.log.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n


### 保存异常信息到单独文件 ###
log4j.appender.errorlog = org.apache.log4j.DailyRollingFileAppender  
## 异常日志文件名
log4j.appender.errorlog.File = E:/log/errorLog.log
log4j.appender.errorlog.Append = true  
##输出ERROR级别以上的日志##
log4j.appender.errorlog.Threshold = ERROR   
log4j.appender.errorlog.DatePattern='.'yyyy-MM-dd  
log4j.appender.errorlog.layout = org.apache.log4j.PatternLayout  
log4j.appender.errorlog.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

###每天产生一个日志文件
log4j.appender.dayFile=org.apache.log4j.DailyRollingFileAppender
#服务器启动日志是追加，false：服务器启动后会生成日志文件把老的覆盖掉
log4j.appender.dayFile.Append=true
#当天的日志文件全路径
log4j.appender.dayFile.File=E:/log/warn.log
log4j.appender.dayFile.DatePattern = yyyy-MM-dd
log4j.appender.dayFile.Threshold=WARN
log4j.appender.dayFile.layout=org.apache.log4j.PatternLayout
log4j.appender.dayFile.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

